// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { StoryblokAsset, StoryblokMultiasset, StoryblokMultilink, StoryblokRichtext } from '../storyblok.d.ts';
export interface BlockCareers {
  anchor_id?: string;
  background_color?: number | string;
  text_color?: number | string;
  headline?: string;
  items?: CareerItem[];
  component: "block_careers";
  _uid: string;
}

export interface BlockCarousel {
  michelin_star?: boolean;
  title?: string;
  link?: Exclude<StoryblokMultilink, {linktype?: "email"} | {linktype?: "asset"}>;
  autoplay?: boolean;
  slides: (SlideSplit | SlideImages | SlideVideo)[];
  component: "block_carousel";
  _uid: string;
}

export interface BlockImage {
  media: StoryblokAsset;
  ratio: number | string;
  ratio_desktop: number | string;
  michelin_star?: boolean;
  title?: string;
  sub_title?: string;
  link?: Exclude<StoryblokMultilink, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "block_image";
  _uid: string;
}

export interface BlockSplit {
  anchor_id?: string;
  content?: (SplitCarousel | SplitMedia)[];
  michelin_star?: boolean;
  headline?: string;
  text: StoryblokRichtext;
  ratio?: number | string;
  ratio_desktop?: number | string;
  link?: Link[];
  reverse?: boolean;
  reverse_desktop?: boolean;
  background_color?: number | string;
  text_color?: number | string;
  component: "block_split";
  _uid: string;
}

export interface BlockText {
  headline?: string;
  text_size: number | string;
  text: StoryblokRichtext;
  link?: Link[];
  background_color?: number | string;
  text_color?: number | string;
  component: "block_text";
  _uid: string;
}

export interface BlockVideo {
  poster: StoryblokAsset;
  video_mobile: StoryblokAsset;
  ratio_mobile: number | string;
  video_desktop?: StoryblokAsset;
  ratio_desktop: number | string;
  component: "block_video";
  _uid: string;
}

export interface CareerItem {
  role: string;
  company: string;
  pdf: StoryblokAsset;
  email: string;
  component: "career_item";
  _uid: string;
}

export interface HeroCarousel {
  autoplay?: boolean;
  slides?: (SlideImages | SlideVideo)[];
  component: "hero_carousel";
  _uid: string;
}

export interface HeroImage {
  media: StoryblokAsset;
  component: "hero_image";
  _uid: string;
}

export interface Link {
  title: string;
  link: Exclude<StoryblokMultilink, {linktype?: "asset"}>;
  component: "link";
  _uid: string;
}

export interface Page {
  hero?: (HeroImage | HeroCarousel)[];
  blocks?: (BlockCareers | BlockCarousel | BlockImage | BlockSplit | BlockText | BlockVideo)[];
  seo_title: string;
  seo_description: string;
  seo_image: StoryblokAsset;
  component: "page";
  _uid: string;
}

export interface Settings {
  navigation_primary?: Link[];
  navigation_secondary?: Link[];
  footer_navigation?: Link[];
  studio_title?: string;
  studio?: StoryblokRichtext;
  places_title?: string;
  places?: StoryblokRichtext;
  contact_title?: string;
  contact?: StoryblokRichtext;
  component: "settings";
  _uid: string;
}

export interface SlideImages {
  images?: StoryblokMultiasset;
  component: "slide_images";
  _uid: string;
}

export interface SlideSplit {
  background_color?: number | string;
  text_color?: number | string;
  media?: StoryblokAsset;
  headline?: string;
  text: StoryblokRichtext;
  reverse?: boolean;
  alignment_mobile?: "" | "top" | "bottom";
  component: "slide_split";
  _uid: string;
}

export interface SlideVideo {
  poster: StoryblokAsset;
  video_mobile: StoryblokAsset;
  video_desktop?: StoryblokAsset;
  component: "slide_video";
  _uid: string;
}

export interface SplitCarousel {
  autoplay?: boolean;
  slides?: SlideImages[];
  component: "split_carousel";
  _uid: string;
}

export interface SplitMedia {
  media?: StoryblokAsset;
  component: "split_media";
  _uid: string;
}
